name: Integration Suite

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]

jobs:
  postgres:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        postgres-version: [14]

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:${{ matrix.postgres-version }}
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: pip install -e .[postgresql,test]
      - name: Integration Tests, Postgres
        run: bash scripts/integration.sh
        env:
          DATABASE_URL: postgresql+asyncpg://postgres:postgres@localhost:5432/postgres

  sqlite:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-test
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -e .[sqlite,test]
      - name: Integration Tests, SQLite
        run: bash scripts/integration.sh
        env:
          DATABASE_URL: sqlite+aiosqlite:///db.sqlite3
